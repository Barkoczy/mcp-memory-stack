apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastify-service
  namespace: mcp-memory-stack
  labels:
    app.kubernetes.io/name: fastify-service
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fastify-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fastify-service
        app.kubernetes.io/component: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        config/checksum: '{{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}'
    spec:
      serviceAccountName: mcp-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: fastify-service
          image: mcp/fastify-service:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3333
              name: http
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          env:
            - name: NODE_ENV
              value: "production"
            - name: CONFIG_FILE
              value: "/app/config/config.json"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: mcp-secrets
                  key: DATABASE_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: mcp-secrets
                  key: JWT_SECRET
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: mcp-secrets
                  key: MCP_API_KEY
            - name: RUST_EMBEDDING_SERVICE_URL
              value: "http://rust-embedding-service:8080"
            - name: RUST_EMBEDDING_SERVICE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: mcp-secrets
                  key: RUST_API_KEY
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            - name: cache-volume
              mountPath: /app/cache
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 3333
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 3333
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: 3333
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30

      volumes:
        - name: config-volume
          configMap:
            name: mcp-config
            items:
              - key: fastify-config.json
                path: config.json
        - name: cache-volume
          emptyDir:
            sizeLimit: 512Mi

---
apiVersion: v1
kind: Service
metadata:
  name: fastify-service
  namespace: mcp-memory-stack
  labels:
    app.kubernetes.io/name: fastify-service
    app.kubernetes.io/component: api-gateway
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
    - port: 3333
      targetPort: 3333
      protocol: TCP
      name: http
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: fastify-service

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: fastify-service-hpa
  namespace: mcp-memory-stack
  labels:
    app.kubernetes.io/name: fastify-service
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fastify-service
  minReplicas: 3
  maxReplicas: 15
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 30
        - type: Pods
          value: 3
          periodSeconds: 30

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: fastify-service-pdb
  namespace: mcp-memory-stack
  labels:
    app.kubernetes.io/name: fastify-service
    app.kubernetes.io/component: availability
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: fastify-service

---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: fastify-service-monitor
  namespace: mcp-memory-stack
  labels:
    app.kubernetes.io/name: fastify-service
    app.kubernetes.io/component: monitoring
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fastify-service
  endpoints:
    - port: metrics
      path: /metrics
      interval: 15s
      scrapeTimeout: 10s
  namespaceSelector:
    matchNames:
      - mcp-memory-stack

---
# Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fastify-service-network-policy
  namespace: mcp-memory-stack
  labels:
    app.kubernetes.io/name: fastify-service
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: fastify-service
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow connections from ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 3333
    # Allow prometheus scraping
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus
      ports:
        - protocol: TCP
          port: 9090
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
    # Allow connections to PostgreSQL
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: postgresql
      ports:
        - protocol: TCP
          port: 5432
    # Allow connections to Rust embedding service
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: rust-embedding-service
      ports:
        - protocol: TCP
          port: 8080
    # Allow HTTPS for external dependencies
    - to: []
      ports:
        - protocol: TCP
          port: 443
