# Monitoring and Observability Stack
# Prometheus, Grafana, Loki for comprehensive monitoring

networks:
  monitoring:
    driver: bridge
  mcp_network:
    external: true

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  alertmanager_data:
    driver: local

services:
  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: mcp-prometheus
    restart: unless-stopped

    # Security
    user: "65534:65534" # nobody user
    read_only: true

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.1"
          memory: 128M

    security_opt:
      - no-new-privileges:true

    cap_drop:
      - ALL

    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=30d"
      - "--storage.tsdb.retention.size=10GB"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"

    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus

    networks:
      - monitoring
      - mcp_network

    ports:
      - "127.0.0.1:9090:9090"

    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:9090/-/healthy",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:10.2.3
    container_name: mcp-grafana
    restart: unless-stopped

    # Security
    user: "472:472" # grafana user

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 64M

    security_opt:
      - no-new-privileges:true

    cap_drop:
      - ALL

    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin123}
      GF_SECURITY_DISABLE_GRAVATAR: "true"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_SECURITY_COOKIE_SECURE: "true"
      GF_SECURITY_COOKIE_SAMESITE: "strict"
      GF_SERVER_ROOT_URL: "http://localhost:3000"
      GF_INSTALL_PLUGINS: "grafana-piechart-panel,grafana-worldmap-panel"

    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro

    networks:
      - monitoring

    ports:
      - "127.0.0.1:3000:3000"

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Loki - Log Aggregation
  loki:
    image: grafana/loki:2.9.4
    container_name: mcp-loki
    restart: unless-stopped

    # Security
    user: "10001:10001"
    read_only: true

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 64M

    security_opt:
      - no-new-privileges:true

    cap_drop:
      - ALL

    command: -config.file=/etc/loki/local-config.yaml

    volumes:
      - ./monitoring/loki.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki

    networks:
      - monitoring

    ports:
      - "127.0.0.1:3100:3100"

    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3100/ready",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Promtail - Log Shipper
  promtail:
    image: grafana/promtail:2.9.4
    container_name: mcp-promtail
    restart: unless-stopped

    # Security
    user: "0:0" # Need root to read Docker logs
    read_only: true

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 128M
        reservations:
          cpus: "0.05"
          memory: 32M

    security_opt:
      - no-new-privileges:true

    cap_drop:
      - ALL
    cap_add:
      - DAC_OVERRIDE

    command: -config.file=/etc/promtail/config.yml

    volumes:
      - ./monitoring/promtail.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

    networks:
      - monitoring

    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:9080/ready",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter - System Metrics
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: mcp-node-exporter
    restart: unless-stopped

    # Security
    user: "65534:65534"
    read_only: true

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 64M
        reservations:
          cpus: "0.05"
          memory: 16M

    security_opt:
      - no-new-privileges:true

    cap_drop:
      - ALL

    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"

    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

    networks:
      - monitoring

    ports:
      - "127.0.0.1:9100:9100"

  # cAdvisor - Container Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: mcp-cadvisor
    restart: unless-stopped

    # Security
    read_only: true

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 64M

    security_opt:
      - no-new-privileges:true

    cap_drop:
      - ALL
    cap_add:
      - SYS_ADMIN

    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

    networks:
      - monitoring

    ports:
      - "127.0.0.1:8080:8080"

    devices:
      - /dev/kmsg
