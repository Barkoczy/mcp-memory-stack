#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "🚀 Running pre-push checks..."

# Get the remote and branch being pushed to
remote="$1"
url="$2"

# Check if we're pushing to main/master branch
protected_branches="main|master|production"
current_branch=$(git rev-parse --abbrev-ref HEAD)

if echo "$current_branch" | grep -qE "^($protected_branches)$"; then
  echo "🔒 Pushing to protected branch: $current_branch"
  echo "🧪 Running comprehensive tests..."
  
  # Run full test suite for protected branches
  npm run test
  
  if [ $? -ne 0 ]; then
    echo "❌ Tests failed. Push to $current_branch aborted."
    echo "Please fix the failing tests before pushing to protected branch."
    exit 1
  fi
  
  # Run security audit
  echo "🔍 Running security audit..."
  npm audit --audit-level moderate
  
  if [ $? -ne 0 ]; then
    echo "⚠️  Security vulnerabilities found."
    echo "Please run 'npm audit fix' to resolve issues."
    echo "Push to $current_branch aborted."
    exit 1
  fi
  
  # Check for TypeScript/ESLint errors in entire codebase
  echo "🔧 Running full codebase linting..."
  npm run lint
  
  if [ $? -ne 0 ]; then
    echo "❌ Linting errors found in codebase."
    echo "Please run 'npm run lint:fix' to resolve issues."
    exit 1
  fi
  
  echo "✅ All checks passed for protected branch push!"
  
else
  echo "📝 Pushing to feature branch: $current_branch"
  echo "🧪 Running unit tests..."
  
  # Run only unit tests for feature branches
  npm run test:unit
  
  if [ $? -ne 0 ]; then
    echo "❌ Unit tests failed. Push aborted."
    echo "Please fix the failing tests before pushing."
    exit 1
  fi
  
  echo "✅ Unit tests passed!"
fi

# Check for large files
echo "📦 Checking for large files..."
large_files=$(git diff --cached --name-only | xargs ls -la 2>/dev/null | awk '$5 > 1048576 {print $9 " (" $5 " bytes)"}')

if [ -n "$large_files" ]; then
  echo "⚠️  Large files detected:"
  echo "$large_files"
  echo "Consider using Git LFS for files larger than 1MB"
fi

# Performance check - ensure Docker images can be built
if [ "$current_branch" = "main" ] || [ "$current_branch" = "master" ]; then
  echo "🐳 Verifying Docker build..."
  docker build --target production -t mcp-memory-test . > /dev/null 2>&1
  
  if [ $? -ne 0 ]; then
    echo "❌ Docker build failed. Please fix Dockerfile issues."
    exit 1
  fi
  
  # Cleanup test image
  docker rmi mcp-memory-test > /dev/null 2>&1 || true
  echo "✅ Docker build verified!"
fi

echo "🎉 All pre-push checks passed! Push proceeding..."